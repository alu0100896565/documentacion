var search_data = {"index":{"searchIndex":["food","alimentos","dieta","dieta_lista","error","list","platos","platos_ambiental","*()","+()","<=>()","<=>()","<=>()","alim_total()","carbohidrats()","carbsporcent()","each()","efener()","efien()","emisiones()","emisionesanuales()","empty()","extract_head()","extract_tail()","huella_nutricional()","idr()","idr()","impactoambiental()","impacto_carbono()","impacto_energetico()","initiaize()","insert_alimh()","insert_alimt()","insert_head()","insert_heads()","insert_tail()","insert_tails()","insert_various_head()","insert_various_tail()","lipids()","lipsporcent()","new()","new()","new()","new()","new()","porcentajes()","proteins()","protsporcent()","recorrerlista()","sumaalimentos()","suma_total()","terreno()","to_s()","to_s()","valorambiental()","valorenergetico()","vct()","food.gemspec","gemfile","gemfile.lock","guardfile","license","readme","rakefile","setup"],"longSearchIndex":["food","food::alimentos","food::dieta","food::dieta_lista","food::error","food::list","food::platos","food::platos_ambiental","food::alimentos#*()","food::alimentos#+()","food::alimentos#<=>()","food::platos#<=>()","food::platos_ambiental#<=>()","food::platos#alim_total()","food::platos#carbohidrats()","food::platos#carbsporcent()","food::list#each()","food::platos_ambiental#efener()","food::platos_ambiental#efien()","food::platos_ambiental#emisiones()","food::dieta_lista#emisionesanuales()","food::list#empty()","food::list#extract_head()","food::list#extract_tail()","food::platos_ambiental#huella_nutricional()","food::dieta#idr()","food::dieta_lista#idr()","food::dieta#impactoambiental()","food::platos_ambiental#impacto_carbono()","food::platos#impacto_energetico()","food::platos_ambiental#initiaize()","food::platos#insert_alimh()","food::platos#insert_alimt()","food::list#insert_head()","food::dieta_lista#insert_heads()","food::list#insert_tail()","food::dieta_lista#insert_tails()","food::list#insert_various_head()","food::list#insert_various_tail()","food::platos#lipids()","food::platos#lipsporcent()","food::alimentos::new()","food::dieta::new()","food::dieta_lista::new()","food::list::new()","food::platos::new()","food::dieta_lista#porcentajes()","food::platos#proteins()","food::platos#protsporcent()","food::list#recorrerlista()","food::dieta#sumaalimentos()","food::dieta_lista#suma_total()","food::platos_ambiental#terreno()","food::alimentos#to_s()","food::platos#to_s()","food::alimentos#valorambiental()","food::alimentos#valorenergetico()","food::platos#vct()","","","","","","","",""],"info":[["Food","","Food.html","","<p>Este módulo se ha creado para describir el comportamiento tanto de alimentos como de platos formados …\n"],["Food::Alimentos","","Food/Alimentos.html","","<p>Esta clase representa un alimento. Se he incluido el mixin comparable.\n"],["Food::Dieta","","Food/Dieta.html","","<p>Esta clase representa un conjunto de alimentos.\n"],["Food::Dieta_lista","","Food/Dieta_lista.html","","<p>Esta clase representa una dieta cuyo conjunto de alimentos es una lista de la clase creada anteriormente. …\n"],["Food::Error","","Food/Error.html","",""],["Food::List","","Food/List.html","","<p>Clase de listas enlazadas. Incluye el mixin Enumerable.\n"],["Food::Platos","","Food/Platos.html","","<p>Esta clase representa un plato como un  conjunto de alimentos y sus cantidades. Incluye el mixin Comparable …\n"],["Food::Platos_Ambiental","","Food/Platos_Ambiental.html","","<p>Clase que representa los platos centrandose en su información ambiental. Es hija de la clase Platos. …\n"],["*","Food::Alimentos","Food/Alimentos.html#method-i-2A","(gram)","<p>Multiplicacion del alimento por la cantidad de gramos del mismo.\n"],["+","Food::Alimentos","Food/Alimentos.html#method-i-2B","(other)","<p>Suma de los alimentos\n"],["<=>","Food::Alimentos","Food/Alimentos.html#method-i-3C-3D-3E","(anOther)","<p>Se define para incluir el mixin comparable. Se compara primero el valor energetico en caso de empate …\n"],["<=>","Food::Platos","Food/Platos.html#method-i-3C-3D-3E","(anOther)","<p>Se define el operador &lt;=&gt; para hacer uso del modulo Comparable. Se compara en base al valor calorico …\n"],["<=>","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-3C-3D-3E","(anOther)","<p>Se define el operador &lt;=&gt; para hacer uso del modulo Comparable sobreescribiendo el de la clase …\n"],["alim_total","Food::Platos","Food/Platos.html#method-i-alim_total","()","<p>Para que las clases hijas tengan acceso a la información nutricional y ambiental del plato.\n"],["carbohidrats","Food::Platos","Food/Platos.html#method-i-carbohidrats","()","<p>Devuelve la cantidad de carbohidratos del plato.\n"],["carbsPorcent","Food::Platos","Food/Platos.html#method-i-carbsPorcent","()","<p>Obtiene el porcentaje de calorias aportadas por carbohidratos.\n"],["each","Food::List","Food/List.html#method-i-each","(&block)","<p>Defino each para poder usar el modulo Enumerable.\n"],["efEner","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-efEner","()","<p>Obtiene la eficiencia energetica del plato.\n"],["efiEn","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-efiEn","()","<p>Obtiene la eficiencia energética formateada como cadena.\n"],["emisiones","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-emisiones","()","<p>Obtiene las emisiones necesarias para producir el plato.\n"],["emisionesAnuales","Food::Dieta_lista","Food/Dieta_lista.html#method-i-emisionesAnuales","()","<p>Obtiene las emisiones anuales de la dieta.\n"],["empty","Food::List","Food/List.html#method-i-empty","()","<p>Comprueba si la lista esta vacia.\n"],["extract_head","Food::List","Food/List.html#method-i-extract_head","()","<p>Extrae el objeto que se encuentra en la cabeza.\n"],["extract_tail","Food::List","Food/List.html#method-i-extract_tail","()","<p>Extrae el objeto que se encuentra en la cola.\n"],["huella_nutricional","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-huella_nutricional","()","<p>Calcula la huella nutricional del plato.\n"],["idr","Food::Dieta","Food/Dieta.html#method-i-idr","()","<p>Compruba si la dieta cumple el idr para el genero especificado.\n"],["idr","Food::Dieta_lista","Food/Dieta_lista.html#method-i-idr","()","<p>Comprueba que se cumpla el idr para el genero especificado.\n"],["impactoAmbiental","Food::Dieta","Food/Dieta.html#method-i-impactoAmbiental","()","<p>Genera el impacto ambiental formateado.\n"],["impacto_carbono","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-impacto_carbono","()","<p>Calcula el indice de impacto de carbono del plato.\n"],["impacto_energetico","Food::Platos","Food/Platos.html#method-i-impacto_energetico","()","<p>Calcula el indice de impacto energetico del plato\n"],["initiaize","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-initiaize","(nombre)","<p>Inicializacion con el nombre del plato.\n"],["insert_alimH","Food::Platos","Food/Platos.html#method-i-insert_alimH","(alim, gram)","<p>Inserta un alimento y su cantidad en las listas por la cabeza.\n"],["insert_alimT","Food::Platos","Food/Platos.html#method-i-insert_alimT","(alim, gram)","<p>Inserta un alimento y su cantidad en las listas por la cola.\n"],["insert_head","Food::List","Food/List.html#method-i-insert_head","(val)","<p>Inserta por la cabeza un objeto.\n"],["insert_headS","Food::Dieta_lista","Food/Dieta_lista.html#method-i-insert_headS","(alimento)","<p>Inserta un alimento por la cabeza.\n"],["insert_tail","Food::List","Food/List.html#method-i-insert_tail","(val)","<p>Inserta por la cola un objeto.\n"],["insert_tailS","Food::Dieta_lista","Food/Dieta_lista.html#method-i-insert_tailS","(alimento)","<p>Inserta un alimento por la cola.\n"],["insert_various_head","Food::List","Food/List.html#method-i-insert_various_head","(array)","<p>Inserta por la cabeza varios objetos.\n"],["insert_various_tail","Food::List","Food/List.html#method-i-insert_various_tail","(array)","<p>Inserta por la cola varios objetos.\n"],["lipids","Food::Platos","Food/Platos.html#method-i-lipids","()","<p>Devuelve la cantidad de grasas del plato\n"],["lipsPorcent","Food::Platos","Food/Platos.html#method-i-lipsPorcent","()","<p>Obtiene el porcentaje de calorias aportadas por grasas.\n"],["new","Food::Alimentos","Food/Alimentos.html#method-c-new","(datos)","<p>Se inicializan los datos del alimento.\n"],["new","Food::Dieta","Food/Dieta.html#method-c-new","(nombre, genero, alimentos)","<p>Inicializa con un conjunto de alimentos, el nombre de la dieta y el genero.\n"],["new","Food::Dieta_lista","Food/Dieta_lista.html#method-c-new","(nombre, genero_)","<p>Inicializa con el nombre de la dieta y el genero.\n"],["new","Food::List","Food/List.html#method-c-new","()","<p>Inicializacion estandar de la lista.\n"],["new","Food::Platos","Food/Platos.html#method-c-new","(nombre)","<p>Se inicializa el plato con su nombre.\n"],["porcentajes","Food::Dieta_lista","Food/Dieta_lista.html#method-i-porcentajes","()","<p>Obtiene los porcentajes de nutrientes de manera formateada.\n"],["proteins","Food::Platos","Food/Platos.html#method-i-proteins","()","<p>Devuelve la cantidad de proteinas del plato\n"],["protsPorcent","Food::Platos","Food/Platos.html#method-i-protsPorcent","()","<p>Obtiene el porcentaje de calorias aportadas por proteinas.\n"],["recorrerLista","Food::List","Food/List.html#method-i-recorrerLista","()","<p>Recorre la lista y devuelve el contenido formateado.\n"],["sumaAlimentos","Food::Dieta","Food/Dieta.html#method-i-sumaAlimentos","()","<p>Suma total de los alimentos de la dieta.\n"],["suma_total","Food::Dieta_lista","Food/Dieta_lista.html#method-i-suma_total","()","<p>Obtiene la suma nutricional de todos los alimentos de la dieta.\n"],["terreno","Food::Platos_Ambiental","Food/Platos_Ambiental.html#method-i-terreno","()","<p>Obtiene el terreno necesario para producir el plato.\n"],["to_s","Food::Alimentos","Food/Alimentos.html#method-i-to_s","()","<p>Paso a cadena del objeto Alimentos formateado.\n"],["to_s","Food::Platos","Food/Platos.html#method-i-to_s","()","<p>Genera en forma de cadena el plato formateado\n"],["valorAmbiental","Food::Alimentos","Food/Alimentos.html#method-i-valorAmbiental","()","<p>Calcula el valor ambiental del alimento\n"],["valorEnergetico","Food::Alimentos","Food/Alimentos.html#method-i-valorEnergetico","()","<p>Calcula el valor energetico del alimento.\n"],["vct","Food::Platos","Food/Platos.html#method-i-vct","()","<p>Calcula el valor calorico total del plato\n"],["Food.gemspec","","Food_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in Food.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  Food (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2019 Eduardo Suarez Ojeda\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>Food\n<p>Practica 9. Lenguajes y Paradigmas de Programación.\nEduardo Suárez Ojeda\nAlu0100896565\n<p>Usage\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}